on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

name: Build with main branch of kaoto

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      CODE_VERSION: max
      TEST_RESOURCES: test-resources

    steps:
      - name: Checkout vscode-kaoto
        uses: actions/checkout@v5
        with:
          path: vscode-kaoto
      - name: Checkout Kaoto
        uses: actions/checkout@v5
        with:
          path: kaoto
          repository: KaotoIO/kaoto
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Start Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker
          addons: registry,registry-aliases
          container-runtime: docker
          insecure-registry: "10.0.0.0/24"
      - name: Set Minikube ENV
        run: |
          eval $(minikube -p minikube docker-env)
          echo "INSTALL_REGISTRY=$(kubectl -n kube-system get service registry -o jsonpath='{.spec.clusterIP}')" >> $GITHUB_ENV
          echo $INSTALL_REGISTRY
      - name: Install JBang
        run: |
          curl -Ls https://sh.jbang.dev | bash -s - app setup
          echo "$HOME/.jbang/bin" >> $GITHUB_PATH
      - name: Kaoto build
        working-directory: kaoto
        run: |
          yarn
          yarn workspace @kaoto/kaoto run build:lib
      - name: yarn link kaoto
        working-directory: vscode-kaoto
        run: yarn link ../kaoto/packages/ui
      - name: yarn build:dev
        working-directory: vscode-kaoto
        run: yarn build:dev
      - name: yarn build:prod
        working-directory: vscode-kaoto
        run: yarn build:prod
      - name: vsix package
        working-directory: vscode-kaoto
        run: yarn vsce package --no-dependencies --yarn
      - name: Allow unprivileged user namespace (ubuntu)
        run: sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
      - name: Run Unit tests
        working-directory: vscode-kaoto
        run: xvfb-run -a yarn test:unit
      - name: Run UI Tests
        working-directory: vscode-kaoto
        run: |
          eval $(minikube -p minikube docker-env)
          xvfb-run -a yarn run test:it:with-prebuilt-vsix:minikube
      - name: Archive vsix
        uses: actions/upload-artifact@v4
        with:
          name: vsix-from-main-branch-of-kaoto
          path: "vscode-kaoto/*.vsix"
      - name: Store VS Code logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vscode-logs
          path: vscode-kaoto/test-resources/settings/logs
      - name: Store VS Code UI Tests screenshots on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ui-test-screenshots
          path: vscode-kaoto/test-resources/screenshots
